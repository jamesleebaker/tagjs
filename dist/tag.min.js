var Tag=function(){function t(t){var e,r,n,i={};if(!t||t.length<1)return i;for(r=0,n=t.length;n>r;r+=1)e=t[r].replace(/['\"\[\]]/g,"").split("="),i[e[0]]=e[1];return i}function e(e){var r="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",n="[\\x20\\t\\r\\n\\f]",i=r.replace("w","w#"),s=e.match(new RegExp("("+r.replace("w","w*")+")")),o=e.match(new RegExp("\\.("+r+")","g")),a=e.match(new RegExp("#("+r+")")),h=e.match(new RegExp("\\["+n+"*("+r+")"+n+"*(?:([*^$|!~]?=)"+n+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+i+")|)|)"+n+"*\\]","g"));if(!s)throw"The selector provided does not supply a valid tag";return h=t(h),o=!o||o.length<1?"":o.join(" ").replace(/\./g,""),a=a?a[0].replace("#",""):void 0,o&&(h["class"]=o),a&&(h.id=a),{tag:s[0],attributes:h}}function r(t,e){var r=e.attributes;for(var n in r){var i=r[n];i&&t.setAttribute(n,i)}return t}function n(t){var e=document.createElement(t.name),i=document.createDocumentFragment();return t.children.length?(t.children.forEach(function(t){i.appendChild(n(t))}),e.appendChild(i)):e.innerText=t.innerText,r(e,t)}var i,s=/area|base|basefont|br|hr|input|img|link|meta/;return i=function(t){var r=e(t);this.name=r.tag,this.attributes=r.attributes,this.innerText="",this.children=[]},i.prototype.add=function(){var t,e,r=Array.prototype.slice.call(arguments);if(r.length)for(t=0,e=r.length;e>t;t+=1)this.children.push(r[t]);return this},i.prototype.getAttr=function(t){return this.attributes[t]},i.prototype.setAttr=function(t){return t&&(this.attributes[t]=t),this},i.prototype.addIf=function(t,e){return t?this.add(e):this},i.prototype.setText=function(t){return this.innerText=String(t),this},i.prototype.addClass=function(t){var e=this.attributes["class"];return-1===e.indexOf(t)&&(this.attributes["class"]+=[" ",t].join("")),this},i.prototype.removeClass=function(t){var e=this.attributes["class"],r=e.indexOf(t);return r>-1&&(e=e.split(" "),e.splice(r,1),this.attributes["class"]=e.join(" ")),this},i.prototype.removeClassIf=function(t,e){return t?this.removeClass(e):this},i.prototype.removeAttr=function(t){return delete this.attributes[t],this},i.prototype.removeAttrIf=function(t,e){return t?this.removeAttr(e):this},i.prototype.addAttr=function(t,e){var r;if("object"==typeof t){for(r in t)t.hasOwnProperty(r)&&!this.attributes[r]&&(this.attributes[r]=t[r]);return this}return this.attributes[t]=e,this},i.prototype.addAttrIf=function(t,e,r){return t?this.addAttr(e,r):this},i.prototype.addClassIf=function(t,e){return t?this.addClass(e):this},i.prototype.render=function(){var t,e,r,i="",o=this.attributes,a=["<",this.name],h=this.children,u=s.test(this.name);if(window&&window.document)return n(this);if(o)for(r in o)o.hasOwnProperty(r)&&o[r]&&a.push(" ",r,'="',o[r],'"');if(u){if(a.push(" />"),h.length)throw["Nested content was provided for the tag name: ",this.name].join("")}else{for(a.push(">"),t=0,e=h.length;e>t;t+=1)i+="string"==typeof h[t]?h[t]:h[t].render();this.innerText.length>0&&a.push(this.innerText),i.length>0&&a.push(i),a.push(["</",this.name,">"].join(""))}return a.join("")},function(t){return new i(t)}}();
//# sourceMappingURL=data:application/json;base64,
